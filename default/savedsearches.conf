[STO - Build Saved Search Asset Map]
action.lookup = 1
action.lookup.filename = sto_asset_map_savedsearch.csv
cron_schedule = 8 * * * *
enableSched = 1
schedule_window = 5
search = | rest /servicesNS/-/-/saved/searches splunk_server=* \
| search disabled=0 \
| eval search_cksum=md5(search), length=len(md5(title)) \
| eval search_title=if(match(title, "[-\s_]"), "RMD5" . substr(md5(title), length - 15), title) \
| eval user='eai:acl.owner' \
| base64 action=encode eai:acl.owner \
| eval user=if(match(user, "[-\s_]"), rtrim('eai:acl.owner', "="), user) \
| eval app='eai:acl.app' \
| base64 action=encode eai:acl.app \
| eval eai:acl.app=if(match(app, "[-\s_]"), rtrim('eai:acl.app', "="), app) \
| eval app_clear=if(match(app, "[-\s_]"), app, null()) \
| eval commands=split(search, "|") \
| eval ol_cmd=mvindex(commands, mvfind(commands, "outputlookup")) \
| eval si_cmd=mvindex(commands, mvfind(commands, "collect")) \
| rex field=ol_cmd "outputlookup (?<ol_tgt_filename>.+)" \
| rex field=si_cmd "index\s?=\s?(?<si_tgt_index>[-_\w]+)" \
| eval si_tgt_index=coalesce(si_tgt_index, 'action.summary_index._name') \
| eval ol_tgt_filename=coalesce(ol_tgt_filename, 'action.lookup.filename') \
| rename title AS object_title \
| fields splunk_server object_title search_title eai:acl.app app_clear eai:acl.sharing eai:acl.owner user is_scheduled cron_schedule max_concurrent dispatchAs dispatch.earliest_time dispatch.latest_time actions search search_cksum si_tgt_index ol_tgt_filename \
| eval object_type="savedsearch"

[STO - Build Dashboard Asset Map]
action.lookup = 1
action.lookup.filename = sto_asset_map_dashboard.csv
cron_schedule = 11 * * * *
enableSched = 1
schedule_window = 5
search = | rest /servicesNS/-/-/data/ui/views splunk_server=local \
| fields - id isDashboard isVisible published author disabled updated description rootNode \
| xpath field=eai:data outfield=all_the_things "//search" \
| eval all_the_things=mvfilter(NOT match(all_the_things, "^\s$")) \
| spath input=eai:data output=inputs path=form.fieldset.input \
| eval inputs=mvfilter(match(inputs, "<search")) \
| fields - eai:data eai:acl.perms eai:acl.perms.* eai:acl.removable eai:acl.can_write eai:acl.modifiable eai:acl.can_share_* eai:acl.can_list eai:acl.can_change_perms eai:type eai:userName \
| spath input=all_the_things output=main_search path=search.query \
| spath input=inputs output=input_searches path=search.query \
| spath input=all_the_things output=base_name path=search{@id} \
| fields - all_the_things inputs \
| mvexpand main_search \
| eval input_flag=if(in(input_searches, main_search), "input", "body") \
| eval len=length(md5(base_name)), search_cksum=md5(main_search) \
| eval search_rmd="RMD5" . substr(md5(base_name), len-15) \
| streamstats count(eval(if(isnotnull(base_name), search_string, 0))) AS search_num by splunk_server, eai:acl.app, title \
| eventstats count(eval(if(isnotnull(base_name), search_string, null()))) AS named_searches by splunk_server, eai:acl.app, title \
| eval base_name=case(match(base_name, "[-\s_]"), search_rmd, isnotnull(base_name), base_name, search_num - named_searches < 1, null(), 1=1, "search" . tostring(search_num - named_searches)) \
| fields - len search_rmd

[STO - Build Data Model Asset Map]
action.lookup = 1
action.lookup.filename = sto_asset_map_datamodel.csv
cron_schedule = 17 * * * *
enableSched = 1
schedule_window = 5
search = | rest /servicesNS/-/-/data/models splunk_server_group=dmc_group_search_head \
| spath input=eai:data output=foo objects{} \
| fields splunk_server, title, eai:acl.app, eai:acl.sharing, eai:acl.owner,acceleration, acceleration.cron_schedule, foo, eai:data \
| mvexpand foo \
| spath input=foo output=parent parentName \
| search parent=BaseEvent \
| spath input=foo constraints{}.search \
| fields - parent foo eai:data \
| rename constraints{}.search AS search, acceleration.cron_schedule AS cron_schedule acceleration AS is_scheduled \
| eval ss_name="_ACCELERATE_DM_" . 'eai:acl.app' . "_" . title . "_ACCELERATE_"

[STO - Build User to Role Map]
action.lookup = 1
action.lookup.filename = sto_asset_map_user_roles.csv
cron_schedule = 24 * * * *
enableSched = 1
schedule_window = 5
search = | rest /services/authentication/users | fields splunk_server, title, roles

[STO - Build Role Access Map]
action.lookup = 1
action.lookup.filename = sto_asset_map_role_access.csv
cron_schedule = 33 * * * *
enableSched = 1
schedule_window = 5
search = | rest /services/authorization/roles \
| fields splunk_server, title, srchIn*, imported_srchIn* \
| eval srchIndexesDefault=mvappend(srchIndexesDefault, imported_srchIndexesDefault) \
| eval srchIndexesAllowed=mvappend(srchIndexesAllwed, imported_srchIndexesAllowed) \
| fields - imported_* \
| table splunk_server, title, srchIndexesDefault, srchIndexesAllowed
