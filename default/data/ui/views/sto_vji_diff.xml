<form>
  <label>Search Job Comparator</label>

  <fieldset>
    <input type="text" token="sid">
      <label>First Search</label>
    </input>
    <input type="text" token="second_sid">
      <label>Second Search</label>
    </input>
  </fieldset>

  <search id="sid_via_rest">
    <query>| rest /services/search/jobs/$sid$ | eval search_comparison="First"
| append [ | rest /services/search/jobs/$second_sid$ | eval search_comparison="Second"]</query>
    <done>
      <set token="rest_info_available">$job.sid$</set>
    </done>
  </search>

  <search id="sid_via_audit">
    <query>`get_audit_index` TERM(action=search)
(TERM(info=granted) NOT CASE(REST)) OR TERM(info=completed)
TERM($sid$) OR TERM($second_sid$)
search_id='$sid$' OR search_id='$second_sid$'
| stats
    earliest(user) AS User
    earliest(savedsearch_name) AS "Search Name"
    earliest(search) AS "Search String"
    latest(eval(if(info="completed", _time, null()))) AS completed_time
    latest(total_run_time) AS "Run Time (sec)"
    latest(scan_count) AS "Scan Count"
    latest(event_count) AS "Event Count"
    latest(search_startup_time) AS "Startup Time"
    latest(searched_buckets) AS "Searched Buckets"
    latest(eliminated_buckets) AS "Skipped Buckets (bloomfilters)"
    latest(considered_events) AS "Considered Events"
    latest(total_slices) AS "Bucket Slices"
    latest(decompressed_slices) AS "Decompressed Slices"
    earliest(_time) AS start
    latest(_time) AS stop 
    by search_id
| eval s_order=if(search_id="'$sid$'", "First", "Second")
| eventstats min(eval(if(s_order="First", start, null()))) AS first_start, 
      max(eval(if(s_order="First", stop, null()))) AS first_stop,
      min(eval(if(s_order="Second", start, null()))) AS second_start, 
      max(eval(if(s_order="Second", stop, null()))) AS second_stop,
      min(start) AS audit_goalpost_et,
      max(stop) AS audit_goalpost_lt
| eval audit_goalpost_et = round(audit_goalpost_et),
      audit_goalpost_lt = round(audit_goalpost_lt) + 1,
      first_start=round(first_start),
      first_stop=round(first_stop) + 1,
      second_start=round(second_start),
      second_stop=round(second_stop) + 1,
      start_diff=round(first_start) - round(second_start)
| rename s_order AS "Search Order"
    </query>
    <done>
      <set token="audit_one_et">$result.first_start$</set>
      <set token="audit_one_lt">$result.first_stop$</set>
      <set token="audit_two_et">$result.second_start$</set>
      <set token="audit_two_lt">$result.second_stop$</set>
      <set token="start_diff">$result.start_diff$</set>
<!-- Couldn't get these to work. Doing it in search instead (see above)
      <condition match="'result.first_start' &gt; 'result.second_start'">
	<set token="audit_goalpost_et">$result.second_start$</set>
      </condition>
      <condition match="'result.second_start' &gt; 'result.first_start'">
	<set token="audit_goalpost_et">$result.first_start$</set>
      </condition>
      <condition match="'result.first_stop' &gt; 'result.second_stop'">
	<set token="audit_goalpost_et">$result.second_stop$</set>
      </condition>
      <condition match="'result.second_stop' &gt; 'result.first_stop'">
	<set token="audit_goalpost_et">$result.first_stop$</set>
      </condition>
      <eval token="audit_goalpost_et">if($result.first_start$ > $result.second_start$, '$result.second_start$', '$result.first_start$')</eval>
      <eval token="audit_goalpost_lt">if($result.first_stop$ > $result.second_stop$, '$result.second_stop$', '$result.first_stop$')</eval>
-->
    <set token="audit_goalpost_et">$result.audit_goalpost_et$</set>
    <set token="audit_goalpost_lt">$result.audit_goalpost_lt$</set>
			
    </done>
  </search>

  <search id="sid_via_introspection">
    <query>`get_introspection_index` sourcetype=splunk_resource_usage data.search_props.role::head component::PerProcess
data.search_props.sid::$sid$ OR data.search_props.sid::$second_sid$
| sitimechart max(data.mem_used) max(data.normalized_pct_cpu) max(data.pct_cpu) max(data.read_mb) max(data.fd_used) by data.search_props.sid
</query>
    <done>
    </done>
  </search>

  <row>
    <panel>
      <table>
	<title>Salient audit log details</title>
	<fields>["Search Order","search_id","User","Search Name","Search String","Run Time (sec)","Scan Count","Event Count","Startup Time","Searched Buckets","Skipped Buckets (bloomfilters)","Considered Events","Bucket Slices","Decompressed Slices"]</fields>
	<search base="sid_via_audit"/>
      </table>
    </panel>
  </row>
  
  <row>
    <panel>
      <table>
	<title>Notable Metrics</title>
        <option name="link.visible">false</option>
	<search base="sid_via_rest">
	  <query>eval startup_time=coalesce('performance.dispatch.createProviderQueue.duration_secs', 'performance.dispatch.createdSearchResultInfrastructure.duration_secs', "None (no remotes)")
| eval local_wait=coalesce('performance.dispatch.fetch.duration_secs', 0)
| eval rate=if(scanCount=0, "N/A", round(scanCount / runDuration, 2) . " E/s")
| sort search_comparison
| table search_comparison, runDuration, startup_time, local_wait, runDuration, diskUsage, scanCount, eventCount, rate</query>
	</search>
      </table>
    </panel>
  </row>
  
  <row>
    <panel>
      <table>
        <title>Search String</title>
        <option name="field">search</option>
        <option name="link.visible">false</option>
        <search base="sid_via_rest">
          <query>eval search=coalesce('request.search', eventSearch)
| table search_comparison, sid, search</query>
        </search>
      </table>
    </panel>
  </row>

  <row>
    <panel>
    <table>
      <title>Event Search (if any)</title>
      <option name="field">eventSearch</option>
      <option name="link.visible">false</option>
      <search base="sid_via_rest"/>
    </table>
    </panel>
  </row>
  <row>
    <panel>
    <table>
      <title>Remote Search (if any)</title>
      <option name="field">remoteSearch</option>
      <option name="link.visible">false</option>
      <search base="sid_via_rest"/>
    </table>
    </panel>
  </row>
  <row>
    <panel>
    <table>
      <title>Reporting Search (if any)</title>
      <option name="field">reportSearch</option>
      <option name="link.visible">false</option>
      <search base="sid_via_rest"/>
    </table>
    </panel>      
  </row>

  <row>
    <chart>
      <title>Performance Histogram</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <option name="charting.chart.stackMode">stacked</option>
      <search base="sid_via_rest">
	<query>search dispatchState=DONE
| stats max(performance.command.search.index.*.invocations) AS * by search_comparison
| fillnull value=0 usec_1_8, usec_8_64, usec_64_512, usec_512_4096, usec_4096_32768, usec_32768_262144, usec_262144_inf
| eval total=usec_1_8 + usec_8_64 + usec_64_512 + usec_512_4096 + usec_4096_32768 + usec_32768_262144 + usec_262144_inf
| search total> 0
| table search_comparison, usec_262144_inf, usec_32768_262144, usec_4096_32768, usec_512_4096, usec_64_512, usec_8_64, usec_1_8
	</query>
      </search>
    </chart>
    <chart>
      <title>Time spent in commands</title>
      <option name="link.visible">true</option>
      <option name="charting.chart">column</option>
      <option name="charting.chart.stackMode">stacked</option>
      <search base="sid_via_rest">
	<query>stats max(performance.command.*.duration_secs) AS *, max(performance.command.search.*.duration_secs) AS * by search_comparison</query>
      </search>
    </chart>
  </row>

  <row>
    <chart>
      <title>Bytes Returned From Indexers</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <option name="charting.chart.stackMode">stacked</option>
      <search base="sid_via_rest">
	<query>search dispatchState=DONE
      | stats max(performance.dispatch.stream.remote.*.output_count) AS * by search_comparison
      | table search_comparison, *
	</query>
      </search>
    </chart>
    <chart>
      <title>Ratio of Bytes Returned vs. Time</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <option name="charting.axisTitleX.text">Hostname</option>
      <option name="charting.axisTitleY.text">Bytes / Sec</option>
      <option name="charting.legend.placement">none</option>
      <search base="sid_via_rest">
	<query><![CDATA[search dispatchState=DONE
| fields search_comparison, performance.dispatch.stream.remote.*
| fields - performance.dispatch.stream.remote.duration_secs performance.dispatch.stream.remote.output_count *.invocations *.input_count
| foreach performance.dispatch.stream.remote.*.duration_secs [ eval <<MATCHSTR>>_ratio='performance.dispatch.stream.remote.<<MATCHSTR>>.output_count' / '<<FIELD>>' ]
| fields search_comparison *_ratio
| rename *_ratio AS *
| untable search_comparison host ratio
| chart max(ratio) AS bytes_sec OVER host BY search_comparison]]></query>
      </search>
    </chart>
  </row>

<!--
  <row>
    <panel>
      <table>
        <title>Job Details</title>
        <option name="drilldown">none</option>
        <search base="sid_via_rest">
          <query>transpose</query>
        </search>
      </table>
    </panel>
  </row>
-->

  <row>
    <panel>
      <chart>
	<title>Indexing Workload at Search Start</title>
	<search>
	  <query>index=_internal source=*remote_searches.log* sourcetype=splunkd_remote_searches
earliest=$audit_goalpost_et$ latest=$audit_goalpost_lt$
starting remote ($sid$ OR $second_sid$)
search_id=remote*$sid$ OR search_id=remote*$second_sid$
| eval marker=if(match(search_id, "^remote_.*_$second_sid$$$"), "First", "Second")
| chart max(active_searches) OVER host BY marker
	  </query>
	</search>
      </chart>
    </panel>
  </row>

  <row>
    <panel>
      <input type="dropdown" token="intro_choice" searchWhenChanged="true">
	<label>Performance Metric</label>
	<choice value="max(data.mem_used)">Memory Used</choice>
	<choice value="max(data.normalized_pct_cpu)">Normalized CPU</choice>
	<choice value="max(data.pct_cpu)">CPU Usage</choice>
	<choice value="max(data.read_mb)">Data Read (MB)</choice>
	<choice value="max(data.fd_used)">Files Used</choice>
	<default>max(data.mem_used)</default>
      </input>
      <chart>
	<option name="charting.chart">line</option>
	<option name="charting.chart.nullValueMode">connect</option>
        <search base="sid_via_introspection">
	  <query>| timechart $intro_choice$ by data.search_props.sid</query>
	</search>
      </chart>
    </panel>
  </row>

</form>

