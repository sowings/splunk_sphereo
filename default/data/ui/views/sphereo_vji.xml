<form>
  <label>Search Job Detail</label>

  <fieldset>
    <input type="text" token="sid"/>
  </fieldset>

  <!-- Here's a sample audit log event pair (start / completed)
Audit:[timestamp=05-28-2018 15:15:52.847, user=admin, action=search, info=granted , search_id='1527545752.863', search='search index=_internal sourcetype=splunk_web_access | stats count', autojoin='1', buckets=0, ttl=600, max_count=500000, maxtime=8640000, enable_lookups='1', extra_fields='', apiStartTime='Sun May 27 15:00:00 2018', apiEndTime='Mon May 28 15:15:52 2018', savedsearch_name=""][n/a] Audit:[timestamp=05-28-2018 15:16:21.395, user=admin, action=search, info=completed, search_id='1527545752.863', total_run_time=0.11, event_count=11, result_count=1, available_count=0, scan_count=11, drop_count=0, exec_time=1527545752, api_et=1527458400.000000000, api_lt=1527545752.000000000, search_et=1527458400.000000000, search_lt=1527545752.000000000, is_realtime=0, savedsearch_name="", search_startup_time="90", searched_buckets=2, eliminated_buckets=0, considered_events=11, total_slices=41, decompressed_slices=1, duration.command.search.index=2, invocations.command.search.index.bucketcache.hit=0, duration.command.search.index.bucketcache.hit=0, invocations.command.search.index.bucketcache.miss=0, duration.command.search.index.bucketcache.miss=0, invocations.command.search.index.bucketcache.error=0, duration.command.search.rawdata=1, invocations.command.search.rawdata.bucketcache.hit=0, duration.command.search.rawdata.bucketcache.hit=0, invocations.command.search.rawdata.bucketcache.miss=0, duration.command.search.rawdata.bucketcache.miss=0, invocations.command.search.rawdata.bucketcache.error=0][n/a]
       -->
  <search id="sid_via_audit">
    <query>`get_audit_index` TERM(action=search)
(TERM(info=granted) NOT CASE(REST)) OR TERM(info=completed)
TERM($sid$) search_id='$sid$'    
| stats earliest(user) earliest(savedsearch_name) earliest(search) latest(total_run_time) latest(scan_count) latest(event_count) latest(search_startup_time) latest(searched_buckets) latest(eliminated_buckets) latest(considered_events) latest(total_slices) latest(decompressed_slices)
    </query>
    <done>
      <set token="audit_info_available">$job.sid$</set>
    </done>
  </search>

  <search id="sid_via_rest">
    <query>| rest /services/search/jobs/$sid$</query>
    <done>
      <set token="rest_info_available">$job.sid$</set>
    </done>
  </search>

  <search id="sid_via_introspection">
    <query>`get_introspection_index` sourcetype=splunk_resource_usage data.search_props.role::head component::PerProcess
data.search_props.sid::$sid$
| sitimechart max(data.mem_used) max(data.normalized_pct_cpu) max(data.pct_cpu) max(data.read_mb) max(data.fd_used)
</query>
    <done>
      <set token="introspection_available">$job.sid$</set>
    </done>
  </search>

  <row>
    <panel>
      <table>
	<title>Salient audit log details</title>
	<search base="sid_via_audit"/>
      </table>
    </panel>
  </row>
  
  
  <row>
    <single>
      <title>Total Jobs Found</title>
      <option name="link.visible">false</option>
      <search base="sid_via_rest">
	<query>stats count</query>
      </search>
    </single>
    <single>
      <title>Adhoc Jobs Found</title>
      <option name="link.visible">false</option>
      <search base="sid_via_rest">
	<query>stats count(eval(if(isSavedSearch=0, title, null()))) AS count</query>
      </search>
    </single>
    <single>
      <title>Scheduled Jobs Found</title>
      <option name="link.visible">false</option>
      <search base="sid_via_rest">
	<query>stats count(eval(if(isSavedSearch=1,isSavedSearch,null()))) AS count</query>
      </search>
    </single>
  </row>

  <row grouping="3,2,2">
    <single>
      <title>Time Spent</title>
      <option name="link.visible">false</option>
      <option name="field">startup_time</option>
      <option name="underLabel">Startup</option>
      <search base="sid_via_rest">
	<query>eval startup_time=coalesce('performance.dispatch.createProviderQueue.duration_secs', 'performance.dispatch.createdSearchResultInfrastructure.duration_secs', "None (no remotes)")</query>
      </search>
    </single>
    <single>
      <option name="link.visible">false</option>
      <option name="field">local_wait</option>
      <option name="underLabel">Waiting for Indexers</option>
      <search base="sid_via_rest">
	<query>eval local_wait=coalesce('performance.dispatch.fetch.duration_secs', 0)</query>
      </search>
    </single>
    <single>
      <!--      <title>Total Time</title> -->
      <option name="link.visible">false</option>
      <option name="field">runDuration</option>
      <option name="underLabel">Total</option>
      <search base="sid_via_rest"/>
    </single>

    <single>
      <title>Search Space Consumption (bytes)</title>
      <option name="link.visible">false</option>
      <option name="field">diskUsage</option>
      <option name="underLabel">on disk</option>
      <search base="sid_via_rest"/>
    </single>
    <single>
      <!--      <title>Size on Disk</title> -->
      <option name="link.visible">false</option>
      <option name="field">bytes</option>
      <option name="underLabel">from indexers</option>
      <search base="sid_via_rest">
	<query>stats sum(performance.dispatch.stream.remote.*.output_count) AS * by sid | transpose | search column!="sid" | stats sum(row 1) AS bytes | eval bytes=tostring(bytes, "commas")</query>
      </search>
    </single>

    <single>
      <title>Scanned Events</title>
      <option name="link.visible">false</option>
      <option name="field">scanCount</option>
      <option name="underLabel">Count</option>
    </single>
    <single>
      <!--      <title>Scan Rate</title> -->
      <option name="link.visible">false</option>
      <option name="field">rate</option>
      <option name="underLabel">rate</option>
      <search base="sid_via_rest">
	<query>eval rate=if(scanCount=0, "N/A", round(scanCount / runDuration, 2) . " E/s")</query>
      </search>
    </single>
  </row>

  <row>
    <single>
      <title>Search String</title>
      <option name="field">search</option>
      <search base="sid_via_rest">
	<query>eval search=coalesce('request.search', eventSearch)</query>
      </search>
    </single>
  </row>
  <row>
    <single>
      <title>Event Search (if any)</title>
      <option name="field">eventSearch</option>
      <search base="sid_via_rest"/>
    </single>
  </row>
  <row>
    <single>
      <title>Remote Search (if any)</title>
      <option name="field">remoteSearch</option>
      <search base="sid_via_rest"/>
    </single>
  </row>
  <row>
    <single>
      <title>Reporting Search (if any)</title>
      <option name="field">reportSearch</option>
      <search base="sid_via_rest"/>
    </single>
  </row>

  <row>
    <chart>
      <title>Performance Histogram</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <option name="charting.chart.stackMode">stacked100</option>
      <search base="sid_via_rest">
	<query>search dispatchState=DONE
| stats max(performance.command.search.index.*.invocations) AS * by sid
| fillnull value=0 usec_1_8, usec_8_64, usec_64_512, usec_512_4096, usec_4096_32768, usec_32768_262144, usec_262144_inf
| eval total=usec_1_8 + usec_8_64 + usec_64_512 + usec_512_4096 + usec_4096_32768 + usec_32768_262144 + usec_262144_inf
| search total> 0
| table sid, usec_262144_inf, usec_32768_262144, usec_4096_32768, usec_512_4096, usec_64_512, usec_8_64, usec_1_8
	</query>
      </search>
    </chart>
    <chart>
      <title>Time spent in commands</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">pie</option>
      <search base="sid_via_rest">
	<query>stats max(performance.command.*.duration_secs) AS *, max(performance.command.search.*.duration_secs) AS * | transpose | rename column AS command, "row 1" as time</query>
      </search>
    </chart>
  </row>

  <row>
    <chart>
      <title>Bytes Returned From Indexers</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <search base="sid_via_rest">
	<query>search dispatchState=DONE
      | stats max(performance.dispatch.stream.remote.*.output_count) AS * by sid
      | table sid, *
	</query>
      </search>
    </chart>
    <chart>
      <title>Ratio of Bytes Returned vs. Time</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">column</option>
      <option name="charting.axisTitleX.text">Hostname</option>
      <option name="charting.axisTitleY.text">Bytes / Sec</option>
      <option name="charting.legend.placement">none</option>
      <search base="sid_via_rest">
	<query><![CDATA[search dispatchState=DONE
| fields sid, performance.dispatch.stream.remote.*  | transpose
| rex field=column "performance\.dispatch\.stream\.remote\.(?<hostname>.+?)\.(?<metric>[^\.]+)$"
| eval sid=if(column="sid", 'row 1', null())
| filldown sid
| eval {metric}='row 1'
| stats max(duration_secs) AS duration_secs
   max(output_count) AS output_count
   by sid, hostname
| eval bytes_per_sec=round(output_count / duration_secs, 2)
| chart max(bytes_per_sec) over hostname by sid]]></query>
      </search>
    </chart>
  </row>

  <row>
    <table>
      <title>Job Details</title>
      <option name="drilldown">none</option>
      <search base="sid_via_rest">
	<query>transpose</query>
      </search>
    </table>
  </row>

  <row>
    <panel>
      <chart>
	<option name="charting.chart">line</option>
	<option name="charting.nullValueMode">connect</option>
        <search base="sid_via_introspection">
	  <query>| timechart max(data.mem_used)</query>
	</search>
      </chart>
    </panel>
  </row>
</form>

