<form>
  <label>Bad Things</label>

  <fieldset submitButton="true">
    <input type="time">
      <label>Time Range</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
  </fieldset>

  <row>
    <panel>
      <table>
	<title>Data Model Acceleration Overlap</title>
	<option name="drilldown">row</option>
	<fields>["_time","Host","Application","Data Model","Status","Detail","Short SID (for inspection)"]</fields>
	<search>
	  <query>index=_internal source=*scheduler.log* sourcetype=scheduler
savedsearch_name="_ACCELERATE_DM_*_ACCELERATE_"
| eval splunk_server=host
| join type=left savedsearch_name splunk_server
[ | inputlookup sto_asset_map_datamodel
| eval savedsearch_name="_ACCELERATE_DM_" . 'eai:acl.app' . "_" . title . "_ACCELERATE_"
| rename title AS model, eai:acl.app AS app
| table model app savedsearch_name  cron_schedule is_scheduled  splunk_server] 
| fields _time host status sid member_label run_time app model cron_schedule
| rename comment AS "Cannot use a host= filter because of SHC delegation; might get false positives"
| eval ssid=replace(sid, "^(\w{10}).*([\w\.]{5})$", "\1...\2")
| `sto_cron_decoder`
| eval high_status=case(status="delegated_remote", "delegated to peer " . member_label, status="delegated_remote_completion", "remote peer " . member_label . " finished", 1=1, status)
| where run_time > cron_minimum_freq
| eval runtime_pp=case(isnull(run_time), null(), isnull(cron_minimum_freq), "Ran for " . run_time . " (sec)", run_time > cron_minimum_freq, "Ran for " . run_time . " (sec), over expected interval of " . cron_minimum_freq . " (sec)", 1=1, "Ran for " . run_time . " (sec)")
| eval Detail=coalesce(runtime_pp, reason)
| table _time host app, model, high_status, Detail, sid, ssid
| rename host AS Host, app AS Application, model AS "Data Model", high_status AS Status, ssid AS "Short SID (for inspection)"</query>
	</search>
	<drilldown>
	  <link><![CDATA[sto_vji?form.sid=$row.sid$&form.srv=$row.Host$]]></link>
        </drilldown>
      </table>
    </panel>
  </row>

  <row>
    <panel>
      <table>
	<title>Users Encountering Queued Searches</title>
      </table>
    </panel>
  </row>

  <row>
    <panel>
      <table>
	<title>Saved Searches Running Over Period</title>
      </table>
    </panel>
  </row>

  <row>
    <panel>
      <table>
	<title>Searches Requiring Cache Fetch</title>
	<fields>["Short SID", "Host", "User", "Run Time (sec)", "Search Span", "Index Cache Misses", "Rawdata Cache Misses"]</fields>
	<search>
	  <query><![CDATA[index=_audit TERM(action=search)
(TERM(info=granted) OR TERM(info=completed)) TERM(search_id=*)
| rex "user=(?<user>[^,]+)"
| eval search_id=trim(search_id, "'")
| stats earliest(user) AS user
    earliest(host) AS host
    earliest(savedsearch_name) AS savedsearch_name
    earliest(search) AS search_string
    latest(eval(if(info="completed", _time, null()))) AS completed_time
    latest(total_run_time) AS total_run_time
    latest(duration_command_search_rawdata_bucketcache_miss) AS rawdata_cache_miss
    latest(duration_command_search_index_bucketcache_miss) AS index_cache_miss
    latest(duration_command_search_rawdata) AS rawdata_time
    latest(duration_command_search_index) AS index_time
    latest(invocations_command_search_rawdata_bucketcache_miss) AS rawdata_cache_miss_count
    latest(invocations_command_search_index_bucketcache_miss) AS index_cache_miss_count
    latest(invocations_command_search_rawdata) AS rawdata_count
    latest(invocations_command_search_index) AS index_count
    latest(api_et) AS api_et
    latest(api_lt) AS api_lt
    by search_id
| eval span=round(api_lt - api_et, 0)
| eval span_pretty=tostring(round(span, 0), "duration")
| fillnull value=0 rawdata_cache_hit_count rawdata_cache_miss_count index_cache_hit_count index_cache_miss_count
| eval rawdata_ratio=round(rawdata_cache_hit_count * 100 / (rawdata_cache_hit_count + rawdata_cache_miss_count), 2), index_ratio=round(index_cache_hit_count * 100 / (index_cache_hit_count + index_cache_miss), 2)
| where isnotnull(rawdata_ratio) OR isnotnull(index_ratio)
| eval ssid=replace(search_id, "^(\w{10}).*([\w\.]{5})$", "\1...\2")
| rename host AS Host,
    user AS User,
    total_run_time AS "Run Time (sec)",
    span_pretty AS "Search Span",
    index_cache_miss_count AS "Index Cache Misses",
    rawdata_cache_miss_count AS "Rawdata Cache Misses",
    ssid AS "Short SID"
]]></query>
	</search>
	<drilldown>
	  <link><![CDATA[sto_vji?form.sid=$row.search_id$&form.srv=$row.Host$]]></link>
        </drilldown>
      </table>
    </panel>
  </row>
</form>
